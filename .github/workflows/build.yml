name: App Build

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      # Get current time
      - name: Get Time
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 0
          format: 'YYYY-MM-DD HH:mm:ss'

      # Install zip
      - name: Install zip
        uses: montudor/action-zip@v1

      # Setup Java version 8
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '8'

      # Checkout repo
      - name: Checkout
        uses: actions/checkout@v2

      # Update npm to version 8
      - name: Update npm to version 8
        run: |
          sudo npm install -g npm@v8

      # Install Cordova-cli
      - name: Install Cordova-cli
        run: |
          sudo npm install -g cordova

      # Install all the project dependencies
      - name: Install dependencies
        run: |
          sudo npm install --legacy-peer-deps
          sudo npm install -g gulp-cli
          sudo npm install -g notify-send --force

      # Install & Run GULP to generate css & js files
      - name: GULP publish
        run: gulp publish-github

#      # Run GULP to generate css & js files
#      - name: GULP publish
#        uses: elstudio/actions-js-build/build@v4
#        with:
#          args: publish-github

#      # Setup the Cordova environment & build app
#      - name: Setup Cordova
#        uses: oxr463/setup-cordova@0.0.2
#        with:
#          exec: |
#            cordova platform add android browser &&/
#            cordova build browser --no-telemetry &&/
#            cordova build android --no-telemetry

      # Setup Cordova & Build App
      - name: Setup Cordova & Build App
        run: |
          cordova platform add android@v9 browser
          cordova build browser --no-telemetry
          cordova build android --no-telemetry

      - name: Zip Browser release
        run: sudo zip -qq -r browser.zip www
        working-directory: platforms/browser

      # Create a Release
      - name: Upload Automated Build
        id: upload-release-asset
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: automated-build-${{ github.run_id }}
          name: Automated Build [${{ steps.time.outputs.time }}]
          allowUpdates: true
          replacesArtifacts: true
          draft: false
          prerelease: true
          artifacts: "platforms/android/app/build/outputs/apk/debug/app-debug.apk,platforms/browser/browser.zip"
          body: |
            Automated Build from latest commit using GitHub Actions!
            May or may not work as expected.

            **Build against:** ${{ github.sha }} on ${{ steps.time.outputs.time }}
            Android: app-debug.apk
            Browser: browser.zip